@using WebApplication.Areas.Launcher.Models.Json
@using WebApplication.Models
@model IEnumerable<WebApplication.Models.ServerViewModel>
@{
    Layout = null;
}

@if (Model != null)
{
    if (Model.Any())
    {
        foreach (var server in Model)
        {
            <div class="server-title">@server.Name (@Html.ActionLink("?", "Details", "Server", new { id = @server.Id }, null))</div>
            <div class="server-progress">
                <div class="circle-progress @server.Id"><strong>0</strong></div>
            </div>
        }

        <div class="server-title">Общий онлайн</div>
            <div class="server-progress">
                <div class="circle-progress 99999"><strong>0</strong></div>
            </div>
    }
    else
    {
        <p style="text-align: center">Серверов нет</p>
    }
}

@if (Model != null && Model.Any())
{
    foreach (var server in Model)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                setProgress('@server.Id', '@(server.ServerData.Status != JsonServerStatus.Error && server.ServerData.Status != JsonServerStatus.Offline ? server.ServerData.PlayerCount : -1)', '@server.ServerData.MaxPlayerCount');
            });
        </script>
    }
    
    <script type="text/javascript">
            $(document).ready(function () {
                setProgress('99999', '@(Model.Aggregate<ServerViewModel, int>(0, (total, next) => total + next.ServerData.PlayerCount))', '@(Model.Aggregate<ServerViewModel, int>(0, (total, next) => total + next.ServerData.MaxPlayerCount))');
            });
    </script>
}