@using System.ComponentModel
@using WebApplication.Domain
@using WebApplication.Models
@model WebApplication.Models.RegisterViewModel
@{
    ViewBag.Title = "Регистрация";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Создайте новую учетную запись.</h4>
    @Html.ValidationSummary(true)
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <div class="form-inline">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @id = "user-name" })
                <input type="button" id="check-username" class="btn btn-primary" value="@Resources.CheckUserName" />
            </div>
            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(m => m.Gender, new { @class = "form-control", @id = "gender" })
            @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Регистрация" />
        </div>
    </div>
}

<img src="@Url.Action("GetSkinImage", "Account", new {userName = ViewBag.UserName, gender = Gender.Male})" id="skin-image" class="skin" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    renderMCSkins('skin', 10);
    $('#check-username').click(function () {
        $.post('@Url.Action("IsUserExists", "Account")',
            {
                userName: $('#user-name').val()
            })
            .done(function(data) {
                console.log(data);
                if (data.status === "success") {
                    growlSuccess(data.message);
                } else {
                    growlError(data.message);
                }
            });
    });

    $('#gender').change(function() {
        var _gender = $('#gender option:selected').val();

        if (_gender == 0) {
            _gender = "Male";
        } else {
            _gender = "Female";
        }
        $(".skin").replaceWith('<img src="" id="skin-image" class="skin" />');
        $('#skin-image').attr("src", "/Account/GetSkinImage?gender=" + _gender);
        renderMCSkins('skin', 10);
    });
</script>